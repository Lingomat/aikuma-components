/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */


import {
  Gestate as AikumaGestate
} from './components/gestate/gestate';

declare global {
  interface HTMLAikumaGestateElement extends AikumaGestate, HTMLElement {
  }
  var HTMLAikumaGestateElement: {
    prototype: HTMLAikumaGestateElement;
    new (): HTMLAikumaGestateElement;
  };
  interface HTMLElementTagNameMap {
    "aikuma-gestate": HTMLAikumaGestateElement;
  }
  interface ElementTagNameMap {
    "aikuma-gestate": HTMLAikumaGestateElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "aikuma-gestate": JSXElements.AikumaGestateAttributes;
    }
  }
  namespace JSXElements {
    export interface AikumaGestateAttributes extends HTMLAttributes {
      size?: {x: number, y: number};
    }
  }
}


import {
  ImageGestureVoice as AikumaImageGestureVoice
} from './components/image-gesture-voice/image-gesture-voice';

declare global {
  interface HTMLAikumaImageGestureVoiceElement extends AikumaImageGestureVoice, HTMLElement {
  }
  var HTMLAikumaImageGestureVoiceElement: {
    prototype: HTMLAikumaImageGestureVoiceElement;
    new (): HTMLAikumaImageGestureVoiceElement;
  };
  interface HTMLElementTagNameMap {
    "aikuma-image-gesture-voice": HTMLAikumaImageGestureVoiceElement;
  }
  interface ElementTagNameMap {
    "aikuma-image-gesture-voice": HTMLAikumaImageGestureVoiceElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "aikuma-image-gesture-voice": JSXElements.AikumaImageGestureVoiceAttributes;
    }
  }
  namespace JSXElements {
    export interface AikumaImageGestureVoiceAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  SlideShow as AikumaSlideShow
} from './components/slide-show/slide-show';

declare global {
  interface HTMLAikumaSlideShowElement extends AikumaSlideShow, HTMLElement {
  }
  var HTMLAikumaSlideShowElement: {
    prototype: HTMLAikumaSlideShowElement;
    new (): HTMLAikumaSlideShowElement;
  };
  interface HTMLElementTagNameMap {
    "aikuma-slide-show": HTMLAikumaSlideShowElement;
  }
  interface ElementTagNameMap {
    "aikuma-slide-show": HTMLAikumaSlideShowElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "aikuma-slide-show": JSXElements.AikumaSlideShowAttributes;
    }
  }
  namespace JSXElements {
    export interface AikumaSlideShowAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  TranslateIGV as AikumaTranslateIgv
} from './components/translate-igv/translate-igv';

declare global {
  interface HTMLAikumaTranslateIgvElement extends AikumaTranslateIgv, HTMLElement {
  }
  var HTMLAikumaTranslateIgvElement: {
    prototype: HTMLAikumaTranslateIgvElement;
    new (): HTMLAikumaTranslateIgvElement;
  };
  interface HTMLElementTagNameMap {
    "aikuma-translate-igv": HTMLAikumaTranslateIgvElement;
  }
  interface ElementTagNameMap {
    "aikuma-translate-igv": HTMLAikumaTranslateIgvElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "aikuma-translate-igv": JSXElements.AikumaTranslateIgvAttributes;
    }
  }
  namespace JSXElements {
    export interface AikumaTranslateIgvAttributes extends HTMLAttributes {
      
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
